/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Titanium SDK
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.example.tiyoutubeplayer;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;

import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.YouTubePlayer;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.listeners.AbstractYouTubePlayerListener;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;


// This proxy can be created by calling Tiyoutubeplayer.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule=TiyoutubeplayerModule.class)
public class YouTubePlayerProxy extends TiViewProxy {
    private class TiYouTubePlayerView extends TiUIView {
        private com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView youTubePlayerView;

        public TiYouTubePlayerView(TiViewProxy proxy) {
            super(proxy);

            Activity activity = proxy.getActivity();
            youTubePlayerView = new com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView(activity);
            setNativeView(youTubePlayerView);

            youTubePlayerView.addYouTubePlayerListener(new AbstractYouTubePlayerListener() {
                @Override
                public void onReady(YouTubePlayer youTubePlayer) {
                    // Get video ID from properties if set
                    String videoId = proxy.getProperties().getString("videoId");
                    if (videoId != null && !videoId.isEmpty()) {
                        youTubePlayer.cueVideo(videoId, 0);
                    }
                }
            });
        }

        @Override
        public void processProperties(KrollDict d) {
            super.processProperties(d);

            if (d.containsKey("videoId")) {
                String videoId = d.getString("videoId");
                if (videoId != null && !videoId.isEmpty()) {
                    // Video ID will be loaded when player is ready
                }
            }
        }
    }

    public YouTubePlayerProxy() {
        super();
    }

    @Override
    public TiUIView createView(Activity activity) {
        return new TiYouTubePlayerView(this);
    }

    @Kroll.method
    public void loadVideo(String videoId) {
        TiUIView view = peekView();
        if (view instanceof TiYouTubePlayerView) {
            TiYouTubePlayerView tiYouTubePlayerView = (TiYouTubePlayerView) view;
            // Implement load video
        }
    }
}
